{"version":3,"sources":["App.module.css","Recipe.module.css","Recipe.tsx","App.tsx","index.tsx"],"names":["module","exports","Recipe","title","calories","image","ingredientLines","open","onToggleOpen","className","styles","recipeCard","Math","floor","src","alt","map","ingredient","index","key","expandButton","onClick","process","REACT_APP_APP_ID","REACT_APP_API_KEY","App","useState","searchInput","setSearchInput","search","setSearch","recipes","setRecipes","openRecipeIndex","setOpenRecipeIndex","useEffect","fetch","then","response","json","data","hits","hit","recipe","app","searchForm","onSubmit","e","preventDefault","searchBar","required","value","placeholder","onChange","target","searchButton","label","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gGACAA,EAAOC,QAAU,CAAC,IAAM,iBAAiB,WAAa,wBAAwB,UAAY,uBAAuB,aAAe,4B,iBCAhID,EAAOC,QAAU,CAAC,WAAa,2BAA2B,aAAe,+B,gKCW1D,SAASC,EAAT,GAOE,IANfC,EAMc,EANdA,MACAC,EAKc,EALdA,SACAC,EAIc,EAJdA,MACAC,EAGc,EAHdA,gBACAC,EAEc,EAFdA,KACAC,EACc,EADdA,aAEA,OACE,yBAAKC,UAAWC,IAAOC,YACrB,4BAAKR,GACL,wCAAcS,KAAKC,MAAMT,IACxBG,GACC,oCACE,yBAAKO,IAAKT,EAAOU,IAAKV,IAEtB,4BACE,gDACCC,EAAgBU,KAAI,SAACC,EAAYC,GAChC,OAAO,wBAAIC,IAAKD,GAAQD,QAKhC,4BACER,UAAWC,IAAOU,aAClBC,QAAS,WACPb,MAGAD,EAAuB,cAAhB,gB,sBCtC+Be,+MAAxCC,E,EAAAA,iBAAkBC,E,EAAAA,kBA+DXC,MAtDf,WAAgB,IAAD,EACyBC,mBAAS,IADlC,mBACNC,EADM,KACOC,EADP,OAEeF,mBAAS,IAFxB,mBAENG,EAFM,KAEEC,EAFF,OAGiBJ,mBAAmB,IAHpC,mBAGNK,EAHM,KAGGC,EAHH,OAIiCN,oBAAU,GAJ3C,mBAINO,EAJM,KAIWC,EAJX,KAab,OAPAC,qBAAU,WACRC,MAAM,mCAAD,OACgCP,EADhC,mBACiDN,EADjD,oBAC6EC,IAE/Ea,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAUR,EAAWQ,EAAKC,KAAKzB,KAAI,SAAC0B,GAAD,OAAcA,EAAIC,gBAC5D,CAACd,IAEF,yBAAKpB,UAAWC,IAAOkC,KACrB,yBAAKnC,UAAWC,IAAOmC,YACrB,6CACA,0BACEC,SAAU,SAACC,GACTA,EAAEC,iBACFlB,EAAUH,GACVC,EAAe,MAGjB,2BACEnB,UAAWC,IAAOuC,UAClBC,UAAQ,EACRC,MAAOxB,EACPyB,YAAY,mBACZC,SAAU,SAACN,GACTnB,EAAemB,EAAEO,OAAOH,UAG5B,4BAAQ1C,UAAWC,IAAO6C,cAA1B,YAGHxB,EAAQf,KAAI,SAAC2B,EAAQzB,GACpB,IAAMX,EAAO0B,IAAoBf,EACjC,OACE,kBAAChB,EAAD,CACEiB,IAAKD,EACLf,MAAOwC,EAAOa,MACdpD,SAAUuC,EAAOvC,SACjBC,MAAOsC,EAAOtC,MACdC,gBAAiBqC,EAAOrC,gBACxBC,KAAMA,EACNC,aAAc,kBAAM0B,EAAmB3B,GAAQ,EAAIW,WCtD/DuC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.84c896c3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1kX79\",\"searchForm\":\"App_searchForm__2JdYJ\",\"searchBar\":\"App_searchBar__3OgeZ\",\"searchButton\":\"App_searchButton__36kWO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"recipeCard\":\"Recipe_recipeCard__1Xe5C\",\"expandButton\":\"Recipe_expandButton__32mLn\"};","import React from \"react\";\nimport styles from \"./Recipe.module.css\";\n\ntype RecipeProps = {\n  title: string;\n  calories: number;\n  image: string;\n  ingredientLines: string[];\n  open: boolean;\n  onToggleOpen: () => void;\n};\n\nexport default function Recipe({\n  title,\n  calories,\n  image,\n  ingredientLines,\n  open,\n  onToggleOpen,\n}: RecipeProps) {\n  return (\n    <div className={styles.recipeCard}>\n      <h3>{title}</h3>\n      <p>Calories: {Math.floor(calories)}</p>\n      {open && (\n        <>\n          <img src={image} alt={image} />\n\n          <ol>\n            <strong>Ingredients:</strong>\n            {ingredientLines.map((ingredient, index) => {\n              return <li key={index}>{ingredient}</li>;\n            })}\n          </ol>\n        </>\n      )}\n      <button\n        className={styles.expandButton}\n        onClick={() => {\n          onToggleOpen();\n        }}\n      >\n        {!open ? \"Read more..\" : \"Read Less..\"}\n      </button>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport Recipe from \"./Recipe\";\nimport styles from \"./App.module.css\";\n\nconst { REACT_APP_APP_ID, REACT_APP_API_KEY } = process.env;\n\ntype Recipe = {\n  calories: number;\n  label: string;\n  image: string;\n  ingredientLines: string[];\n};\n\nfunction App() {\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [search, setSearch] = useState(\"\");\n  const [recipes, setRecipes] = useState<Recipe[]>([]);\n  const [openRecipeIndex, setOpenRecipeIndex] = useState(-1);\n\n  useEffect(() => {\n    fetch(\n      `https://api.edamam.com/search?q=${search}&app_id=${REACT_APP_APP_ID}&app_key=${REACT_APP_API_KEY}`\n    )\n      .then((response) => response.json())\n      .then((data) => setRecipes(data.hits.map((hit: any) => hit.recipe)));\n  }, [search]);\n  return (\n    <div className={styles.app}>\n      <div className={styles.searchForm}>\n        <h2>Recipe Search</h2>\n        <form\n          onSubmit={(e) => {\n            e.preventDefault();\n            setSearch(searchInput);\n            setSearchInput(\"\");\n          }}\n        >\n          <input\n            className={styles.searchBar}\n            required\n            value={searchInput}\n            placeholder=\"Search recipes..\"\n            onChange={(e) => {\n              setSearchInput(e.target.value);\n            }}\n          />\n          <button className={styles.searchButton}>Search</button>\n        </form>\n      </div>\n      {recipes.map((recipe, index) => {\n        const open = openRecipeIndex === index;\n        return (\n          <Recipe\n            key={index}\n            title={recipe.label}\n            calories={recipe.calories}\n            image={recipe.image}\n            ingredientLines={recipe.ingredientLines}\n            open={open}\n            onToggleOpen={() => setOpenRecipeIndex(open ? -1 : index)}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}